{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fjemli\\\\Documents\\\\dev\\\\next\\\\hacker-next\\\\components\\\\Comment.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport default (({\n  comment\n}) => __jsx(\"div\", {\n  className: \"comment\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"comment-user\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }\n}, comment.user), __jsx(\"div\", {\n  className: \"comment-content\",\n  dangerouslySetInnerHTML: {\n    __html: comment.content\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }\n}), comment.comments && __jsx(\"div\", {\n  className: \"nested-comments\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 33\n  }\n}, comment.comments.map(nestedComment => __jsx(Comment, {\n  key: nestedComment.id,\n  comment: nestedComment,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 25\n  }\n})))));","map":{"version":3,"sources":["C:/Users/fjemli/Documents/dev/next/hacker-next/components/Comment.js"],"names":["comment","user","__html","content","comments","map","nestedComment","id"],"mappings":";;;AAAA,gBAAe,CAAC;AAACA,EAAAA;AAAD,CAAD,KACX;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,OAAO,CAACC,IADb,CADJ,EAII;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAiC,EAAA,uBAAuB,EAAE;AAACC,IAAAA,MAAM,EAAEF,OAAO,CAACG;AAAjB,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAMQH,OAAO,CAACI,QAAR,IAAoB;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEZJ,OAAO,CAACI,QAAR,CAAiBC,GAAjB,CAAqBC,aAAa,IAC9B,MAAC,OAAD;AAAS,EAAA,GAAG,EAAEA,aAAa,CAACC,EAA5B;AAAgC,EAAA,OAAO,EAAED,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFY,CAN5B,CADJ","sourcesContent":["export default ({comment}) => (\r\n    <div className=\"comment\">\r\n        <div className=\"comment-user\">\r\n            {comment.user}\r\n        </div>\r\n        <div className=\"comment-content\" dangerouslySetInnerHTML={{__html: comment.content}}></div>\r\n        {\r\n            comment.comments && <div className=\"nested-comments\">\r\n                {\r\n                    comment.comments.map(nestedComment => (\r\n                        <Comment key={nestedComment.id} comment={nestedComment}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n);"]},"metadata":{},"sourceType":"module"}